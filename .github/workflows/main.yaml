name: CI Pipeline

on:
  push:
    branches:
      - feature/*
jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install backend dependencies
        working-directory: ./api
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./webapp
        run: npm ci

  test:
    name: Run Tests
    runs-on: ubuntu-22.04
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run backend tests
        working-directory: ./api
        run: |
          npm ci
          npm test

      - name: Run frontend tests
        working-directory: ./webapp
        run: |
          npm ci
          npm test

  build:
    name: Build Application
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build backend
        working-directory: ./api
        run: npm run build

      - name: Build frontend
        working-directory: ./webapp
        run: |
          npm ci
          npm run build

  dockerize:
    name: Dockerize Application
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        run: |
          docker build --no-cache  -t ${{ secrets.DOCKER_USERNAME }}/ecommercefrontend:$GITHUB_SHA -f webapp/Dockerfile ./webapp
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommercefrontend:$GITHUB_SHA

      - name: Build and push backend image
        run: |
          docker build --no-cache  -t ${{ secrets.DOCKER_USERNAME }}/ecommercebackend:$GITHUB_SHA -f api/Dockerfile ./api
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommercebackend:$GITHUB_SHA

